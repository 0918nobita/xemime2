name: Build

on: [push]

jobs:
  debian:
    name: Generate .deb package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v6
        with:
          java-version: openjdk@1.14
      - name: Generate fat JAR
        run: sbt assembly
      - run: mv dist/xemime.jar deb-package/usr/lib/xemime/xemime.jar
      - name: Generate min JRE
        run: |
          jlink --compress=2 \
            --module-path "${JAVA_HOME}\jmods" \
            --add-modules java.scripting,java.xml \
            --output deb-package/usr/lib/xemime/min-jre
      - run: chmod +x deb-package/usr/bin/xemime
      - run: dpkg-deb --build deb-package .
      - uses: actions/upload-artifact@v2
        with:
          name: debian
          path: '*.deb'

  macos:
    name: Generate .dmg for macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v6
        with:
          java-version: openjdk@1.14
      - name: Generate fat JAR
        run: sbt assembly
      - run: mv dist/xemime.jar macOS/Xemime.app/Contents/MacOS/xemime.jar
      - name: Generate min JRE
        run: |
          jlink --compress=2 \
            --module-path "${JAVA_HOME}/jmods" \
            --add-modules java.scripting,java.desktop \
            --output macOS/Xemime.app/Contents/MacOS/min-jre
      - run: chmod +x macOS/Xemime.app/Contents/MacOS/launch.sh
      - name: Install create-dmg
        run: |
          brew update
          brew install create-dmg
      - name: Exec create-dmg
        run: |
          create-dmg \
            --volname "Xemime 0.1.0 Pre-Alpha Installer" \
            --volicon macOS/Xemime.app/Contents/Resources/app.icns \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "Xemime.app" 200 190 \
            --hide-extension "Xemime.app" \
            --app-drop-link 600 185 \
            --no-internet-enable \
            Xemime-0.1.0-PA-Installer.dmg \
            macOS
      - uses: actions/upload-artifact@v2
        with:
          name: macOS
          path: '*.dmg'

  windows:
    name: Generate installer for Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v6
        with:
          java-version: openjdk@1.14
      - name: Generate fat JAR
        run: sbt assembly
        shell: bash
      - name: Generate min JRE
        run: |
          jlink --compress=2 `
            --module-path "${JAVA_HOME}\jmods" `
            --add-modules java.scripting,java.xml `
            --output dist\min-jre
      - run: choco install innosetup
      - run: iscc windows/installer.iss
      - uses: actions/upload-artifact@v2
        with:
          name: windows
          path: 'windows/Output/*'
